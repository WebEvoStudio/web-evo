[
  {
    "title": "你会用ES6，那倒是用啊！",
    "dependencies": "不是标题党，这是一位leader在一次代码评审会对小组成员发出的“怒吼”，原因是在代码评审中发现很多地方还是采用ES5的写法，也不是说用ES5写法不行，会有BUG，只是造成代码量增多，可读性变差而已",
    "mark_content": "不是标题党，这是一位leader在一次代码评审会对小组成员发出的“怒吼”，原因是在代码评审中发现很多地方还是采用ES5的写法，也不是说用ES5写法不行，会有BUG，只是造成代码量增多，可读性变差而已。\n\n恰好，这位leader有代码洁癖，面对3~5年经验的成员，还写这种水平的代码，极为不满，不断对代码进行吐槽。不过对于他的吐槽，我感觉还是有很大收获的，故就把leader的吐槽记录下来，分享给掘友们，觉得有收获点个赞，有错误的或者更好的写法，非常欢迎在评论中留言。\n\n**ps：ES5之后的JS语法统称ES6！！！**\n## 一、关于取值的吐槽\n\n取值在程序中非常常见，比如从对象`obj`中取值。\n\n```\nconst obj = {\n    a:1,\n    b:2,\n    c:3,\n    d:4,\n    e:5,\n}\n复制代码\n```\n\n**吐槽**：\n\n```\nconst a = obj.a;\nconst b = obj.b;\nconst c = obj.c;\nconst d = obj.d;\nconst e = obj.e;\n复制代码\n```\n\n或者\n\n```\nconst f = obj.a + obj.d;\nconst g = obj.c + obj.e;\n复制代码\n```\n\n吐槽：“不会用ES6的解构赋值来取值吗？5行代码用1行代码搞定不香吗？直接用对象名加属性名去取值，要是对象名短还好，很长呢？搞得代码中到处都是这个对象名。”\n\n**改进**：\n\n```\nconst {a,b,c,d,e} = obj;\nconst f = a + d;\nconst g = c + e;\n复制代码\n```\n\n**反驳**\n\n不是不用ES6的解构赋值，而是服务端返回的数据对象中的属性名不是我想要的，这样取值，不是还得重新创建个遍历赋值。\n\n**吐槽**\n\n看来你对ES6的解构赋值掌握的还是不够彻底。如果想创建的变量名和对象的属性名不一致，可以这么写：\n\n```\nconst {a:a1} = obj;\nconsole.log(a1);// 1\n复制代码\n```\n\n**补充**\n\nES6的解构赋值虽然好用。但是要注意解构的对象不能为`undefined`、`null`。否则会报错，故要给被解构的对象一个默认值。\n\n```\nconst {a,b,c,d,e} = obj || {};\n```\n\n##"
  }
]
